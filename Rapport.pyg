class TokenBucket(object):

def __init__(self, burstLimit):
self.burstLimit = burstLimit
self.messages = deque([])

def enqueue(self, message):
if len(self.messages) == self.burstLimit:
return None
else:
self.messages.append(message)
return message

def dequeue(self):
try:
val = self.messages.pop()
except IndexError:
val = None

return val

def printSize(self):
print(str(len(self.messages)) + '/' + str(self.burstLimit) + ' messages')


